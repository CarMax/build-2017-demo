{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "databaseAccounts_name": {
      "type": "string"
    },
    "writeRegion": {
      "type": "string"
    },
    "consistencyLevel": {
      "type": "string",
      "allowedValues": [
        "Eventual",
        "Strong",
        "Session",
        "BoundedStaleness"
      ],
      "metadata": {
        "description": "The DocumentDB default consistency level for this account."
      }
    },
    "maxStalenessPrefix": {
      "type": "int",
      "minValue": 10,
      "maxValue": 1000,
      "metadata": {
        "description": "When consistencyLevel is set to BoundedStaleness, then this value is required, otherwise it can be ignored."
      }
    },
    "maxIntervalInSeconds": {
      "type": "int",
      "minValue": 5,
      "maxValue": 600,
      "metadata": {
        "description": "When consistencyLevel is set to BoundedStaleness, then this value is required, otherwise it can be ignored."
      }
    },
    "subscriptionId": {
      "type": "string"
    },
    "applicationInsightsName": {
      "type": "string"
    },
    "applicationInsightsLocation": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_RAGRS"
    },
    "storageAccountName": {
      "type": "string"
    },
    "storageAccountLocation": {
      "type": "string",
      "defaultValue": "westus"
    },
    "serviceBusNamespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    },
    "serviceBusSku": {
      "type": "string",
      "allowedValues": [ "Basic", "Standard", "Premium" ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The messaging tier for service Bus namespace"
      }
    },
    "serviceBusApiVersion": {
      "type": "string",
      "defaultValue": "2015-08-01",
      "metadata": {
        "description": "Service Bus ApiVersion used by the template"
      }
    },
    "serviceBusSenderAuthRuleName": {
      "type": "string",
      "defaultValue": "MessageSenderKey",
      "metadata": {
        "description": "Name of the Service Bus Authorization Rule for Message Sender"
      }
    },
    "serviceBusListenerAuthRuleName": {
      "type": "string",
      "defaultValue": "MessageListenerKey",
      "metadata": {
        "description": "Name of the Service Bus Authorization Rule for Message Listner"
      }
    },
    "serviceBusTopicName": {
      "type": "string",
      "defaultValue": "vehicles",
      "metadata": {
        "description": "Service Bus Topic name"
      }
    },
    "serviceBusDetailsSubscription": {
      "type": "object",
      "defaultValue": {
        "name": "vehicle-svc-details-updates",
        "topicName": "vehicles",
        "filter": "MessageType = 'vehicle-details-update' AND MajorVersion = 1",
        "action": "SET sys.Label = 'vehicle-details-update'"
      },
      "metadata": {
        "description": "Service Bus Subscription name, filter and action"
      }
    },
    "serviceBusSoldSubscription": {
      "type": "object",
      "defaultValue": {
        "name": "vehicle-svc-vehicle-sold",
        "topicName": "vehicles",
        "filter": "MessageType = 'vehicle-sold' AND MajorVersion = 1",
        "action": "SET sys.Label = 'vehicle-sold'"
      },
      "metadata": {
        "description": "Service Bus Subscription name, filter and action"
      }
    }
  },
    "variables": {
        "location": "[resourceGroup().location]",
        "senderAuthRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), parameters('serviceBusSenderAuthRuleName'))]",
        "listenerAuthRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), parameters('serviceBusListenerAuthRuleName'))]",
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "defaultAuthRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), variables('defaultSASKeyName'))]",
        "serviceBusTopicPath": "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'), '/topics/', parameters('serviceBusTopicName'))]",
        "applicationInsightsAlerts": {
            "Prefix": "[concat('Vehicle ', parameters('environment'))]",
            "DeadLetterMetricsName": "vehicle-svc-details-updates Dead Letter Depth",
            "DepthMetricsName": "vehicle-svc-details-updates Depth",
            "EmailAddresses": [ "<your-email-id-goes-here>" ],
            "WebhooksUrl": ""
        },
        "appInsightsAlertsNotification": [
            {
                "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                "sendToServiceOwners": false,
                "customEmails": "[variables('applicationInsightsAlerts').EmailAddresses]"
            },
            {
                "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleWebhookAction",
                "serviceUri": "[variables('applicationInsightsAlerts').WebhooksUrl]",
                "properties": { }
            }
        ],
        "application": "Vehicle API",
        "team": "Platform Team"
    },
    "resources": [
        {
            "comments": "DocumentDB",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "name": "[parameters('databaseAccounts_name')]",
            "apiVersion": "2015-04-08",
            "location": "[parameters('writeRegion')]",
            "tags": {
                "environment": "[parameters('environment')]",
                "application": "[variables('application')]",
                "team": "[variables('team')]"
            },
            "properties": {
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "[parameters('consistencyLevel')]",
                    "maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
                    "maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
                },
                "name": "[parameters('databaseAccounts_name')]"
            },
            "resources": [ ],
            "dependsOn": [ ]
        },
        {
            "apiVersion": "[parameters('serviceBusApiVersion')]",
            "name": "[parameters('serviceBusNamespaceName')]",
            "type": "Microsoft.ServiceBus/namespaces",
            "location": "[variables('location')]",
            "kind": "Messaging",
            "sku": {
                "name": "[parameters('serviceBusSku')]",
                "tier": "[parameters('serviceBusSku')]"
            },
            "properties": { },
            "resources": [
                {
                    "apiVersion": "[parameters('serviceBusApiVersion')]",
                    "name": "[parameters('serviceBusSenderAuthRuleName')]",
                    "type": "authorizationRules",
                    "dependsOn": [ "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]" ],
                    "location": "[variables('location')]",
                    "properties": {
                        "rights": [ "Send" ]
                    }
                },
                {
                    "apiVersion": "[parameters('serviceBusApiVersion')]",
                    "name": "[parameters('serviceBusTopicName')]",
                    "type": "topics",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "path": "[parameters('serviceBusTopicName')]",
                        "enableBatchedOperations": false,
                        "enablePartitioning": true,
                        "enableSubscriptionPartitioning": false,
                        "filteringMessagesBeforePublishing": false,
                        "maxSizeInMegabytes": 5120
                    },
                  "resources": [
                    {
                      "apiVersion": "[parameters('serviceBusApiVersion')]",
                      "name": "[parameters('serviceBusDetailsSubscription').name]",
                      "type": "subscriptions",
                      "location": "[variables('location')]",
                      "dependsOn": [
                        "[variables('serviceBusTopicPath')]"
                      ],
                      "properties": {},
                      "resources": [
                        {
                          "apiVersion": "[parameters('serviceBusApiVersion')]",
                          "name": "filterRule",
                          "type": "Rules",
                          "dependsOn": [
                            "[concat(variables('serviceBusTopicPath'), '/subscriptions/', parameters('serviceBusDetailsSubscription').name)]"
                          ],
                          "properties": {
                            "filter": {
                              "sqlExpression": "[parameters('serviceBusDetailsSubscription').filter]"
                            },
                            "action": {
                              "sqlExpression": "[parameters('serviceBusDetailsSubscription').action]"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "apiVersion": "[parameters('serviceBusApiVersion')]",
                      "name": "[parameters('serviceBusSoldSubscription').name]",
                      "type": "subscriptions",
                      "location": "[variables('location')]",
                      "dependsOn": [
                        "[variables('serviceBusTopicPath')]"
                      ],
                      "properties": {},
                      "resources": [
                        {
                          "apiVersion": "[parameters('serviceBusApiVersion')]",
                          "name": "filterRule",
                          "type": "Rules",
                          "dependsOn": [
                            "[concat(variables('serviceBusTopicPath'), '/subscriptions/', parameters('serviceBusSoldSubscription').name)]"
                          ],
                          "properties": {
                            "filter": {
                              "sqlExpression": "[parameters('serviceBusSoldSubscription').filter]"
                            },
                            "action": {
                              "sqlExpression": "[parameters('serviceBusSoldSubscription').action]"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
            ]
        },
        {
            "comments": "Application Insights - Vehicle API",
            "type": "Microsoft.Insights/components",
            "kind": "web",
            "name": "[parameters('applicationInsightsName')]",
            "apiVersion": "2014-04-01",
            "location": "[parameters('applicationInsightsLocation')]",
            "tags": {
                "environment": "[parameters('environment')]",
                "application": "[variables('application')]",
                "team": "[variables('team')]"
            },
            "properties": {
                "ApplicationId": "[parameters('applicationInsightsName')]"
            },
            "resources": [ ],
            "dependsOn": [ ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[parameters('storageAccountLocation')]",
            "tags": {
                "environment": "[parameters('environment')]",
                "application": "[variables('application')]",
                "team": "[variables('team')]"
            },
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {
            }
        }
    ]
}
